df_rast <- Reduce(function(dtf1, dtf2) merge(dtf1, dtf2, by = "ID", all.x = TRUE),
mget(ls(pattern="extract_rast_day")))
df_rast <- merge(df_rast,df_pond_names[c("pond","polygon")],
by.x="ID",by.y="polygon")
# Combine ground-truthed data with raster data
df_gt_rast <- merge(df_gt,df_rast,by="pond")
#Remove ID col
df_gt_rast <- df_gt_rast[,-35]
# Order the columns correctly
namevec <- c(names(df_gt_rast)[c(1:4)],sort(names(df_gt_rast)[c(5:ncol(df_gt_rast))]))
df_gt_rast <- df_gt_rast[,namevec]
# Get the variable names
vnames <- substr(names(df_gt_rast)[c(5:ncol(df_gt_rast))],1,(nchar(names(df_gt_rast))[c(5:ncol(df_gt_rast))]-5))
vnames <- unique(vnames)
tmp_seq <- seq(5,ncol(df_gt_rast),1)
tmp_seq_split <- split(tmp_seq, as.integer(gl(length(tmp_seq), length(filenames), length(tmp_seq))))
names(tmp_seq_split) <- NULL
# Reshape to long format
df_wide <- reshape(df_gt_rast,
direction="long",
varying=tmp_seq_split,
v.names=vnames,
timevar="day",
idvar=c("pond"),
times=c(1:length(filenames)))
# Convert character columns to numeric
df_wide$ammonia <- as.numeric(df_wide$ammonia)
df_wide$chlorophyll <- as.numeric(df_wide$chlorophyll)
df_wide$do <- as.numeric(df_wide$do)
df_wide$ph <- as.numeric(df_wide$ph)
df_wide$phycocyanin <- as.numeric(df_wide$phycocyanin)
df_wide$temperature <- as.numeric(df_wide$temperature)
# Retain only complete cases
df_wide_c <- df_wide[complete.cases(df_wide),]
# Save to file
write.csv(df_wide,"intermediate/df_wide.csv",row.names = F)
write.csv(df_wide_c,"intermediate/df_wide_c.csv",row.names = F)
##################################################
### Visualise a few bands for a couple of days ###
##################################################
g_day2_band3 <- ggplot() +
geom_spatraster(aes(fill=B3),data=rast_masked_day2) +
scale_fill_viridis(direction=-1,option="mako") +
geom_spatvector(data=pond_polygons_d,fill=NA,linewidth=1.5) +
geom_spatvector_text(aes(label=pond),data=vect_pond_names,size=2) +
ggtitle("Day 2; Band 3 (green)")
g_day2_band8 <- ggplot() +
geom_spatraster(aes(fill=B8),data=rast_masked_day2) +
scale_fill_viridis(direction=-1,option="rocket") +
geom_spatvector(data=pond_polygons_d,fill=NA,linewidth=1.5) +
geom_spatvector_text(aes(label=pond),data=vect_pond_names,size=2) +
ggtitle("Day 2; Band 8 (near-infrared)")
g_day2_rgb <- ggplot() +
geom_spatraster_rgb(data=rast_masked_day2,r=4,g=3,b=2,max_col_value=3500) +
geom_spatvector(data=pond_polygons_d,fill=NA,linewidth=1.5) +
geom_spatvector_text(aes(label=pond),data=vect_pond_names,size=2) +
ggtitle("Day 2; true-colour (RGB)")
g_day5_band3 <- ggplot() +
geom_spatraster(aes(fill=B3),data=rast_masked_day5) +
scale_fill_viridis(direction=-1,option="mako") +
geom_spatvector(data=pond_polygons_d,fill=NA,linewidth=1.5) +
geom_spatvector_text(aes(label=pond),data=vect_pond_names,size=2) +
ggtitle("Day 5; Band 3 (green)")
g_day5_band8 <- ggplot() +
geom_spatraster(aes(fill=B8),data=rast_masked_day5) +
scale_fill_viridis(direction=-1,option="rocket") +
geom_spatvector(data=pond_polygons_d,fill=NA,linewidth=1.5) +
geom_spatvector_text(aes(label=pond),data=vect_pond_names,size=2) +
ggtitle("Day 5; Band 8 (near-infrared)")
g_day5_rgb <- ggplot() +
geom_spatraster_rgb(data=rast_masked_day5,r=4,g=3,b=2,max_col_value=2500) +
geom_spatvector(data=pond_polygons_d,fill=NA,linewidth=1.5) +
geom_spatvector_text(aes(label=pond),data=vect_pond_names,size=2) +
ggtitle("Day 5; true-colour (RGB)")
g_day25_band38 <- grid.arrange(g_day2_band3,
g_day2_band8,
g_day2_rgb,
g_day5_band3,
g_day5_band8,
g_day5_rgb,
nrow=2)
ggsave("preliminary_analysis/g_day25_band38.png",g_day25_band38,width=16,height=12)
g_day25_band38 <- grid.arrange(g_day2_band3,
g_day2_band8,
g_day2_rgb,
g_day5_band3,
g_day5_band8,
g_day5_rgb,
nrow=2)
ggsave("preliminary_analysis/g_day25_band38.png",g_day25_band38,width=16,height=12)
cloud_threshold <- c(75,75,75,75,75)
# Now repeat the process (sorry)
# mask by the cloud threshold
# and then extract mean values for each band for each pond
# Note that this requires the cloud masks and the main data tifs
# to have identical filenames per day
for (i in c(1:length(filenames))){
rast_tmp <- rast(paste0("gee_tifs/",filenames[i]))
cloud_tmp <- rast(paste0("gee_cloudmasks/",filenames[i]))
rast_tmp_resampled <- resample(rast_tmp,cloud_tmp)
rast_tmp_masked <- mask(x = rast_tmp_resampled,
mask = cloud_tmp,
maskvalues = seq(cloud_threshold[i],100,1))
assign(paste0("rast_masked_day",i), rast_tmp_masked)
extract_tmp <- extract(rast_tmp_masked,pond_polygons_d,fun=mean,na.rm=TRUE)
names(extract_tmp)[c(2:ncol(extract_tmp))] <-
paste0(names(extract_tmp)[c(2:ncol(extract_tmp))],"_day",i)
assign(paste0("extract_rast_day",i), extract_tmp)
}
# Merge band pond data into a single data frame
# https://stackoverflow.com/questions/8091303/simultaneously-merge-multiple-data-frames-in-a-list
df_rast <- Reduce(function(dtf1, dtf2) merge(dtf1, dtf2, by = "ID", all.x = TRUE),
mget(ls(pattern="extract_rast_day")))
df_rast <- merge(df_rast,df_pond_names[c("pond","polygon")],
by.x="ID",by.y="polygon")
# Combine ground-truthed data with raster data
df_gt_rast <- merge(df_gt,df_rast,by="pond")
#Remove ID col
df_gt_rast <- df_gt_rast[,-35]
# Order the columns correctly
namevec <- c(names(df_gt_rast)[c(1:4)],sort(names(df_gt_rast)[c(5:ncol(df_gt_rast))]))
df_gt_rast <- df_gt_rast[,namevec]
# Get the variable names
vnames <- substr(names(df_gt_rast)[c(5:ncol(df_gt_rast))],1,(nchar(names(df_gt_rast))[c(5:ncol(df_gt_rast))]-5))
vnames <- unique(vnames)
tmp_seq <- seq(5,ncol(df_gt_rast),1)
tmp_seq_split <- split(tmp_seq, as.integer(gl(length(tmp_seq), length(filenames), length(tmp_seq))))
names(tmp_seq_split) <- NULL
# Reshape to long format
df_wide <- reshape(df_gt_rast,
direction="long",
varying=tmp_seq_split,
v.names=vnames,
timevar="day",
idvar=c("pond"),
times=c(1:length(filenames)))
# Convert character columns to numeric
df_wide$ammonia <- as.numeric(df_wide$ammonia)
df_wide$chlorophyll <- as.numeric(df_wide$chlorophyll)
df_wide$do <- as.numeric(df_wide$do)
df_wide$ph <- as.numeric(df_wide$ph)
df_wide$phycocyanin <- as.numeric(df_wide$phycocyanin)
df_wide$temperature <- as.numeric(df_wide$temperature)
# Retain only complete cases
df_wide_c <- df_wide[complete.cases(df_wide),]
# Save to file
write.csv(df_wide,"intermediate/df_wide.csv",row.names = F)
write.csv(df_wide_c,"intermediate/df_wide_c.csv",row.names = F)
##################################################
### Visualise a few bands for a couple of days ###
##################################################
g_day2_band3 <- ggplot() +
geom_spatraster(aes(fill=B3),data=rast_masked_day2) +
scale_fill_viridis(direction=-1,option="mako") +
geom_spatvector(data=pond_polygons_d,fill=NA,linewidth=1.5) +
geom_spatvector_text(aes(label=pond),data=vect_pond_names,size=2) +
ggtitle("Day 2; Band 3 (green)")
g_day2_band8 <- ggplot() +
geom_spatraster(aes(fill=B8),data=rast_masked_day2) +
scale_fill_viridis(direction=-1,option="rocket") +
geom_spatvector(data=pond_polygons_d,fill=NA,linewidth=1.5) +
geom_spatvector_text(aes(label=pond),data=vect_pond_names,size=2) +
ggtitle("Day 2; Band 8 (near-infrared)")
g_day2_rgb <- ggplot() +
geom_spatraster_rgb(data=rast_masked_day2,r=4,g=3,b=2,max_col_value=3500) +
geom_spatvector(data=pond_polygons_d,fill=NA,linewidth=1.5) +
geom_spatvector_text(aes(label=pond),data=vect_pond_names,size=2) +
ggtitle("Day 2; true-colour (RGB)")
g_day5_band3 <- ggplot() +
geom_spatraster(aes(fill=B3),data=rast_masked_day5) +
scale_fill_viridis(direction=-1,option="mako") +
geom_spatvector(data=pond_polygons_d,fill=NA,linewidth=1.5) +
geom_spatvector_text(aes(label=pond),data=vect_pond_names,size=2) +
ggtitle("Day 5; Band 3 (green)")
g_day5_band8 <- ggplot() +
geom_spatraster(aes(fill=B8),data=rast_masked_day5) +
scale_fill_viridis(direction=-1,option="rocket") +
geom_spatvector(data=pond_polygons_d,fill=NA,linewidth=1.5) +
geom_spatvector_text(aes(label=pond),data=vect_pond_names,size=2) +
ggtitle("Day 5; Band 8 (near-infrared)")
g_day5_rgb <- ggplot() +
geom_spatraster_rgb(data=rast_masked_day5,r=4,g=3,b=2,max_col_value=2500) +
geom_spatvector(data=pond_polygons_d,fill=NA,linewidth=1.5) +
geom_spatvector_text(aes(label=pond),data=vect_pond_names,size=2) +
ggtitle("Day 5; true-colour (RGB)")
g_day25_band38 <- grid.arrange(g_day2_band3,
g_day2_band8,
g_day2_rgb,
g_day5_band3,
g_day5_band8,
g_day5_rgb,
nrow=2)
ggsave("preliminary_analysis/g_day25_band38.png",g_day25_band38,width=16,height=12)
cloud_threshold <- c(70,70,70,70,70)
# Now repeat the process (sorry)
# mask by the cloud threshold
# and then extract mean values for each band for each pond
# Note that this requires the cloud masks and the main data tifs
# to have identical filenames per day
for (i in c(1:length(filenames))){
rast_tmp <- rast(paste0("gee_tifs/",filenames[i]))
cloud_tmp <- rast(paste0("gee_cloudmasks/",filenames[i]))
rast_tmp_resampled <- resample(rast_tmp,cloud_tmp)
rast_tmp_masked <- mask(x = rast_tmp_resampled,
mask = cloud_tmp,
maskvalues = seq(cloud_threshold[i],100,1))
assign(paste0("rast_masked_day",i), rast_tmp_masked)
extract_tmp <- extract(rast_tmp_masked,pond_polygons_d,fun=mean,na.rm=TRUE)
names(extract_tmp)[c(2:ncol(extract_tmp))] <-
paste0(names(extract_tmp)[c(2:ncol(extract_tmp))],"_day",i)
assign(paste0("extract_rast_day",i), extract_tmp)
}
# Merge band pond data into a single data frame
# https://stackoverflow.com/questions/8091303/simultaneously-merge-multiple-data-frames-in-a-list
df_rast <- Reduce(function(dtf1, dtf2) merge(dtf1, dtf2, by = "ID", all.x = TRUE),
mget(ls(pattern="extract_rast_day")))
df_rast <- merge(df_rast,df_pond_names[c("pond","polygon")],
by.x="ID",by.y="polygon")
# Combine ground-truthed data with raster data
df_gt_rast <- merge(df_gt,df_rast,by="pond")
#Remove ID col
df_gt_rast <- df_gt_rast[,-35]
# Order the columns correctly
namevec <- c(names(df_gt_rast)[c(1:4)],sort(names(df_gt_rast)[c(5:ncol(df_gt_rast))]))
df_gt_rast <- df_gt_rast[,namevec]
# Get the variable names
vnames <- substr(names(df_gt_rast)[c(5:ncol(df_gt_rast))],1,(nchar(names(df_gt_rast))[c(5:ncol(df_gt_rast))]-5))
vnames <- unique(vnames)
tmp_seq <- seq(5,ncol(df_gt_rast),1)
tmp_seq_split <- split(tmp_seq, as.integer(gl(length(tmp_seq), length(filenames), length(tmp_seq))))
names(tmp_seq_split) <- NULL
# Reshape to long format
df_wide <- reshape(df_gt_rast,
direction="long",
varying=tmp_seq_split,
v.names=vnames,
timevar="day",
idvar=c("pond"),
times=c(1:length(filenames)))
# Convert character columns to numeric
df_wide$ammonia <- as.numeric(df_wide$ammonia)
df_wide$chlorophyll <- as.numeric(df_wide$chlorophyll)
df_wide$do <- as.numeric(df_wide$do)
df_wide$ph <- as.numeric(df_wide$ph)
df_wide$phycocyanin <- as.numeric(df_wide$phycocyanin)
df_wide$temperature <- as.numeric(df_wide$temperature)
# Retain only complete cases
df_wide_c <- df_wide[complete.cases(df_wide),]
# Save to file
write.csv(df_wide,"intermediate/df_wide.csv",row.names = F)
write.csv(df_wide_c,"intermediate/df_wide_c.csv",row.names = F)
##################################################
### Visualise a few bands for a couple of days ###
##################################################
g_day2_band3 <- ggplot() +
geom_spatraster(aes(fill=B3),data=rast_masked_day2) +
scale_fill_viridis(direction=-1,option="mako") +
geom_spatvector(data=pond_polygons_d,fill=NA,linewidth=1.5) +
geom_spatvector_text(aes(label=pond),data=vect_pond_names,size=2) +
ggtitle("Day 2; Band 3 (green)")
g_day2_band8 <- ggplot() +
geom_spatraster(aes(fill=B8),data=rast_masked_day2) +
scale_fill_viridis(direction=-1,option="rocket") +
geom_spatvector(data=pond_polygons_d,fill=NA,linewidth=1.5) +
geom_spatvector_text(aes(label=pond),data=vect_pond_names,size=2) +
ggtitle("Day 2; Band 8 (near-infrared)")
g_day2_rgb <- ggplot() +
geom_spatraster_rgb(data=rast_masked_day2,r=4,g=3,b=2,max_col_value=3500) +
geom_spatvector(data=pond_polygons_d,fill=NA,linewidth=1.5) +
geom_spatvector_text(aes(label=pond),data=vect_pond_names,size=2) +
ggtitle("Day 2; true-colour (RGB)")
g_day5_band3 <- ggplot() +
geom_spatraster(aes(fill=B3),data=rast_masked_day5) +
scale_fill_viridis(direction=-1,option="mako") +
geom_spatvector(data=pond_polygons_d,fill=NA,linewidth=1.5) +
geom_spatvector_text(aes(label=pond),data=vect_pond_names,size=2) +
ggtitle("Day 5; Band 3 (green)")
g_day5_band8 <- ggplot() +
geom_spatraster(aes(fill=B8),data=rast_masked_day5) +
scale_fill_viridis(direction=-1,option="rocket") +
geom_spatvector(data=pond_polygons_d,fill=NA,linewidth=1.5) +
geom_spatvector_text(aes(label=pond),data=vect_pond_names,size=2) +
ggtitle("Day 5; Band 8 (near-infrared)")
g_day5_rgb <- ggplot() +
geom_spatraster_rgb(data=rast_masked_day5,r=4,g=3,b=2,max_col_value=2500) +
geom_spatvector(data=pond_polygons_d,fill=NA,linewidth=1.5) +
geom_spatvector_text(aes(label=pond),data=vect_pond_names,size=2) +
ggtitle("Day 5; true-colour (RGB)")
g_day25_band38 <- grid.arrange(g_day2_band3,
g_day2_band8,
g_day2_rgb,
g_day5_band3,
g_day5_band8,
g_day5_rgb,
nrow=2)
ggsave("preliminary_analysis/g_day25_band38.png",g_day25_band38,width=16,height=12)
g_day25_band38 <- grid.arrange(g_day2_band3,
g_day2_band8,
g_day2_rgb,
g_day5_band3,
g_day5_band8,
g_day5_rgb,
nrow=2)
ggsave("preliminary_analysis/g_day25_band38.png",g_day25_band38,width=16,height=12)
cloud_threshold <- c(60,60,60,60,60)
# Now repeat the process (sorry)
# mask by the cloud threshold
# and then extract mean values for each band for each pond
# Note that this requires the cloud masks and the main data tifs
# to have identical filenames per day
for (i in c(1:length(filenames))){
rast_tmp <- rast(paste0("gee_tifs/",filenames[i]))
cloud_tmp <- rast(paste0("gee_cloudmasks/",filenames[i]))
rast_tmp_resampled <- resample(rast_tmp,cloud_tmp)
rast_tmp_masked <- mask(x = rast_tmp_resampled,
mask = cloud_tmp,
maskvalues = seq(cloud_threshold[i],100,1))
assign(paste0("rast_masked_day",i), rast_tmp_masked)
extract_tmp <- extract(rast_tmp_masked,pond_polygons_d,fun=mean,na.rm=TRUE)
names(extract_tmp)[c(2:ncol(extract_tmp))] <-
paste0(names(extract_tmp)[c(2:ncol(extract_tmp))],"_day",i)
assign(paste0("extract_rast_day",i), extract_tmp)
}
# Merge band pond data into a single data frame
# https://stackoverflow.com/questions/8091303/simultaneously-merge-multiple-data-frames-in-a-list
df_rast <- Reduce(function(dtf1, dtf2) merge(dtf1, dtf2, by = "ID", all.x = TRUE),
mget(ls(pattern="extract_rast_day")))
df_rast <- merge(df_rast,df_pond_names[c("pond","polygon")],
by.x="ID",by.y="polygon")
# Combine ground-truthed data with raster data
df_gt_rast <- merge(df_gt,df_rast,by="pond")
#Remove ID col
df_gt_rast <- df_gt_rast[,-35]
# Order the columns correctly
namevec <- c(names(df_gt_rast)[c(1:4)],sort(names(df_gt_rast)[c(5:ncol(df_gt_rast))]))
df_gt_rast <- df_gt_rast[,namevec]
# Get the variable names
vnames <- substr(names(df_gt_rast)[c(5:ncol(df_gt_rast))],1,(nchar(names(df_gt_rast))[c(5:ncol(df_gt_rast))]-5))
vnames <- unique(vnames)
tmp_seq <- seq(5,ncol(df_gt_rast),1)
tmp_seq_split <- split(tmp_seq, as.integer(gl(length(tmp_seq), length(filenames), length(tmp_seq))))
names(tmp_seq_split) <- NULL
# Reshape to long format
df_wide <- reshape(df_gt_rast,
direction="long",
varying=tmp_seq_split,
v.names=vnames,
timevar="day",
idvar=c("pond"),
times=c(1:length(filenames)))
# Convert character columns to numeric
df_wide$ammonia <- as.numeric(df_wide$ammonia)
df_wide$chlorophyll <- as.numeric(df_wide$chlorophyll)
df_wide$do <- as.numeric(df_wide$do)
df_wide$ph <- as.numeric(df_wide$ph)
df_wide$phycocyanin <- as.numeric(df_wide$phycocyanin)
df_wide$temperature <- as.numeric(df_wide$temperature)
# Retain only complete cases
df_wide_c <- df_wide[complete.cases(df_wide),]
# Save to file
write.csv(df_wide,"intermediate/df_wide.csv",row.names = F)
write.csv(df_wide_c,"intermediate/df_wide_c.csv",row.names = F)
##################################################
### Visualise a few bands for a couple of days ###
##################################################
g_day2_band3 <- ggplot() +
geom_spatraster(aes(fill=B3),data=rast_masked_day2) +
scale_fill_viridis(direction=-1,option="mako") +
geom_spatvector(data=pond_polygons_d,fill=NA,linewidth=1.5) +
geom_spatvector_text(aes(label=pond),data=vect_pond_names,size=2) +
ggtitle("Day 2; Band 3 (green)")
g_day2_band8 <- ggplot() +
geom_spatraster(aes(fill=B8),data=rast_masked_day2) +
scale_fill_viridis(direction=-1,option="rocket") +
geom_spatvector(data=pond_polygons_d,fill=NA,linewidth=1.5) +
geom_spatvector_text(aes(label=pond),data=vect_pond_names,size=2) +
ggtitle("Day 2; Band 8 (near-infrared)")
g_day2_rgb <- ggplot() +
geom_spatraster_rgb(data=rast_masked_day2,r=4,g=3,b=2,max_col_value=3500) +
geom_spatvector(data=pond_polygons_d,fill=NA,linewidth=1.5) +
geom_spatvector_text(aes(label=pond),data=vect_pond_names,size=2) +
ggtitle("Day 2; true-colour (RGB)")
g_day5_band3 <- ggplot() +
geom_spatraster(aes(fill=B3),data=rast_masked_day5) +
scale_fill_viridis(direction=-1,option="mako") +
geom_spatvector(data=pond_polygons_d,fill=NA,linewidth=1.5) +
geom_spatvector_text(aes(label=pond),data=vect_pond_names,size=2) +
ggtitle("Day 5; Band 3 (green)")
g_day5_band8 <- ggplot() +
geom_spatraster(aes(fill=B8),data=rast_masked_day5) +
scale_fill_viridis(direction=-1,option="rocket") +
geom_spatvector(data=pond_polygons_d,fill=NA,linewidth=1.5) +
geom_spatvector_text(aes(label=pond),data=vect_pond_names,size=2) +
ggtitle("Day 5; Band 8 (near-infrared)")
g_day5_rgb <- ggplot() +
geom_spatraster_rgb(data=rast_masked_day5,r=4,g=3,b=2,max_col_value=2500) +
geom_spatvector(data=pond_polygons_d,fill=NA,linewidth=1.5) +
geom_spatvector_text(aes(label=pond),data=vect_pond_names,size=2) +
ggtitle("Day 5; true-colour (RGB)")
g_day25_band38 <- grid.arrange(g_day2_band3,
g_day2_band8,
g_day2_rgb,
g_day5_band3,
g_day5_band8,
g_day5_rgb,
nrow=2)
ggsave("preliminary_analysis/g_day25_band38.png",g_day25_band38,width=16,height=12)
# Choose the cloud mask thresholds
# (from day 1 to day 5, in order)
cloud_threshold <- c(10,30,12,22,26)
# Now repeat the process (sorry)
# mask by the cloud threshold
# and then extract mean values for each band for each pond
# Note that this requires the cloud masks and the main data tifs
# to have identical filenames per day
for (i in c(1:length(filenames))){
rast_tmp <- rast(paste0("gee_tifs/",filenames[i]))
cloud_tmp <- rast(paste0("gee_cloudmasks/",filenames[i]))
rast_tmp_resampled <- resample(rast_tmp,cloud_tmp)
rast_tmp_masked <- mask(x = rast_tmp_resampled,
mask = cloud_tmp,
maskvalues = seq(cloud_threshold[i],100,1))
assign(paste0("rast_masked_day",i), rast_tmp_masked)
extract_tmp <- extract(rast_tmp_masked,pond_polygons_d,fun=mean,na.rm=TRUE)
names(extract_tmp)[c(2:ncol(extract_tmp))] <-
paste0(names(extract_tmp)[c(2:ncol(extract_tmp))],"_day",i)
assign(paste0("extract_rast_day",i), extract_tmp)
}
# Merge band pond data into a single data frame
# https://stackoverflow.com/questions/8091303/simultaneously-merge-multiple-data-frames-in-a-list
df_rast <- Reduce(function(dtf1, dtf2) merge(dtf1, dtf2, by = "ID", all.x = TRUE),
mget(ls(pattern="extract_rast_day")))
df_rast <- merge(df_rast,df_pond_names[c("pond","polygon")],
by.x="ID",by.y="polygon")
# Combine ground-truthed data with raster data
df_gt_rast <- merge(df_gt,df_rast,by="pond")
#Remove ID col
df_gt_rast <- df_gt_rast[,-35]
# Order the columns correctly
namevec <- c(names(df_gt_rast)[c(1:4)],sort(names(df_gt_rast)[c(5:ncol(df_gt_rast))]))
df_gt_rast <- df_gt_rast[,namevec]
# Get the variable names
vnames <- substr(names(df_gt_rast)[c(5:ncol(df_gt_rast))],1,(nchar(names(df_gt_rast))[c(5:ncol(df_gt_rast))]-5))
vnames <- unique(vnames)
tmp_seq <- seq(5,ncol(df_gt_rast),1)
tmp_seq_split <- split(tmp_seq, as.integer(gl(length(tmp_seq), length(filenames), length(tmp_seq))))
names(tmp_seq_split) <- NULL
# Reshape to long format
df_wide <- reshape(df_gt_rast,
direction="long",
varying=tmp_seq_split,
v.names=vnames,
timevar="day",
idvar=c("pond"),
times=c(1:length(filenames)))
# Convert character columns to numeric
df_wide$ammonia <- as.numeric(df_wide$ammonia)
df_wide$chlorophyll <- as.numeric(df_wide$chlorophyll)
df_wide$do <- as.numeric(df_wide$do)
df_wide$ph <- as.numeric(df_wide$ph)
df_wide$phycocyanin <- as.numeric(df_wide$phycocyanin)
df_wide$temperature <- as.numeric(df_wide$temperature)
# Retain only complete cases
df_wide_c <- df_wide[complete.cases(df_wide),]
# Save to file
write.csv(df_wide,"intermediate/df_wide.csv",row.names = F)
write.csv(df_wide_c,"intermediate/df_wide_c.csv",row.names = F)
##################################################
### Visualise a few bands for a couple of days ###
##################################################
g_day2_band3 <- ggplot() +
geom_spatraster(aes(fill=B3),data=rast_masked_day2) +
scale_fill_viridis(direction=-1,option="mako") +
geom_spatvector(data=pond_polygons_d,fill=NA,linewidth=1.5) +
geom_spatvector_text(aes(label=pond),data=vect_pond_names,size=2) +
ggtitle("Day 2; Band 3 (green)")
g_day2_band8 <- ggplot() +
geom_spatraster(aes(fill=B8),data=rast_masked_day2) +
scale_fill_viridis(direction=-1,option="rocket") +
geom_spatvector(data=pond_polygons_d,fill=NA,linewidth=1.5) +
geom_spatvector_text(aes(label=pond),data=vect_pond_names,size=2) +
ggtitle("Day 2; Band 8 (near-infrared)")
g_day2_rgb <- ggplot() +
geom_spatraster_rgb(data=rast_masked_day2,r=4,g=3,b=2,max_col_value=3500) +
geom_spatvector(data=pond_polygons_d,fill=NA,linewidth=1.5) +
geom_spatvector_text(aes(label=pond),data=vect_pond_names,size=2) +
ggtitle("Day 2; true-colour (RGB)")
g_day5_band3 <- ggplot() +
geom_spatraster(aes(fill=B3),data=rast_masked_day5) +
scale_fill_viridis(direction=-1,option="mako") +
geom_spatvector(data=pond_polygons_d,fill=NA,linewidth=1.5) +
geom_spatvector_text(aes(label=pond),data=vect_pond_names,size=2) +
ggtitle("Day 5; Band 3 (green)")
g_day5_band8 <- ggplot() +
geom_spatraster(aes(fill=B8),data=rast_masked_day5) +
scale_fill_viridis(direction=-1,option="rocket") +
geom_spatvector(data=pond_polygons_d,fill=NA,linewidth=1.5) +
geom_spatvector_text(aes(label=pond),data=vect_pond_names,size=2) +
ggtitle("Day 5; Band 8 (near-infrared)")
g_day5_rgb <- ggplot() +
geom_spatraster_rgb(data=rast_masked_day5,r=4,g=3,b=2,max_col_value=2500) +
geom_spatvector(data=pond_polygons_d,fill=NA,linewidth=1.5) +
geom_spatvector_text(aes(label=pond),data=vect_pond_names,size=2) +
ggtitle("Day 5; true-colour (RGB)")
g_day25_band38 <- grid.arrange(g_day2_band3,
g_day2_band8,
g_day2_rgb,
g_day5_band3,
g_day5_band8,
g_day5_rgb,
nrow=2)
ggsave("preliminary_analysis/g_day25_band38.png",g_day25_band38,width=16,height=12)
