max_uv <- uv_chart_thismonth[,which_half_of_month]
max_uv
which_half_of_month
max_uv <- max_uv_options[,which_half_of_month]
max_uv
string_adelaide <- paste0("UV @ ",
time_adelaide,
" = ",
,uv_adelaide)
string_adelaide <- paste0("UV @ ",
time_adelaide,
" = ",
uv_adelaide)
string_adelaide
string_chart
string_chart <- paste0("Max UV today = ",
max_uv)
string_chart
# Combine strings
uv_strings <- paste0("\n\n",string_adelaide,
"\n",
string_chart,
"\n\n\n")
uv_strings
?system
system("curl https://cloud.woelkli.com/remote.php/dav/public-calendars/ibz7z2ajXb7srQQc/?export > teddies_calendar.ics")
system("curl https://cloud.woelkli.com/remote.php/dav/public-calendars/ibz7z2ajXb7srQQc/?export > ~/Scheduled/dashboard/teddies_calendar.ics")
install.packages("calendar")
??calendar
teddies_calendar <-
ical("~/Scheduled/dashboard/teddies_calendar.ics")
library(calendar)
teddies_calendar <- ical("~/Scheduled/dashboard/teddies_calendar.ics")
teddies_read <- readLines(""~/Scheduled/dashboard/teddies_calendar.ics"")
teddies_read <- readLines("~/Scheduled/dashboard/teddies_calendar.ics")
teddies_calendar <- ical(teddies_read)
teddies_calendar
teddies_calendar$DTSTART
teddies_calendar
teddies_calendar$DSTART
teddies_calendar$DTSTART
head(teddies_calendar)
as.POSIXct(Sys.Date())
teddies_calendar$DTSTART[1]
as.POSIXct(Sys.Time())
as.POSIXct(Sys.time())
today
today <- as.POSIXct(Sys.time())
difftime(today,teddies_calendar$DTSTART[1])
difftime(today,teddies_calendar$DTSTART[1],units="hours")
abs(difftime(today,teddies_calendar$DTSTART[1],units="hours"))
abs(difftime(today,teddies_calendar$DTSTART[1],units="hours"))<(24*7)
?difftime
today-teddies_calendar$DTSTART[1]
abs(difftime(today,teddies_calendar$DTSTART[1],units="days"))<(24*7)
abs(difftime(today,teddies_calendar$DTSTART[1],units="days"))
today
today+(24*60*7)
today+(60*60*24*7)
seven_days <- today+(60*60*24*7)
teddies_calendar$DTSTART[1] >= today
View(teddies_calendar)
teddies_calendar$DTSTART[45]
as.POSIXct(Sys.time())
year
this_year <- substr(as.character(as.POSIXct(Sys.time())),1,4)
this_year
this_year <- as.numeric(substr(as.character(as.POSIXct(Sys.time())),1,4))
this_year
years_needed_to_add <- this_year-2023
years_needed_to_add\
years_needed_to_add
teddies_calendar <- ical(teddies_read)
as.POSIXlt(teddies_calendar$DTSTART)
as.POSIXlt(teddies_calendar$DTSTART)$year
as.POSIXlt(teddies_calendar$DTSTART)$year+years_needed_to_add
dates_for_this_year$year+years_needed_to_add
dates_for_this_year <- as.POSIXlt(teddies_calendar$DTSTART)
dates_for_this_year$year+years_needed_to_add
dates_for_this_year
dates_for_this_year <- as.POSIXct(dates_for_this_year)
dates_for_this_year
dates_for_this_year <- as.POSIXlt(teddies_calendar$DTSTART)
dates_for_this_year$year+years_needed_to_add
dates_for_this_year <- as.POSIXct(dates_for_this_year)
dates_for_this_year
dates_for_this_year
dates_for_this_year
dates_for_this_year$year
dates_for_this_year
dates_for_this_year <- as.POSIXlt(teddies_calendar$DTSTART)
dates_for_this_year$year <- dates_for_this_year$year+years_needed_to_add
dates_for_this_year <- as.POSIXct(dates_for_this_year)
dates_for_this_year
teddies_calendar$DTEND
DTSTART_thisyear <- as.POSIXlt(teddies_calendar$DTSTART)
DTSTART_thisyear$year <- DTSTART_thisyear$year+years_needed_to_add
DTSTART_thisyear <- as.POSIXct(DTSTART_thisyear)
teddies_calendar$DTSTART <- DTSTART_thisyear
DTEND_thisyear <- as.POSIXlt(teddies_calendar$DTEND_thisyear)
DTEND_thisyear$year <- DTEND_thisyear$year+years_needed_to_add
DTSTART_thisyear
View(teddies_calendar)
DTEND_thisyear <- as.POSIXlt(teddies_calendar$DTEND_thisyear)
DTEND_thisyear$year <- DTEND_thisyear$year+years_needed_to_add
DTEND_thisyear <- as.POSIXlt(teddies_calendar$DTEND_thisyear)
DTEND_thisyear <- as.POSIXlt(teddies_calendar$DTEND)
DTEND_thisyear$year <- DTEND_thisyear$year+years_needed_to_add
DTEND_thisyear <- as.POSIXct(DTEND_thisyear)
teddies_calendar$DTEND <- DTEND_thisyear
DTSTART_thisyear <- as.POSIXlt(teddies_calendar$DTSTART)
DTSTART_thisyear$year <- DTSTART_thisyear$year+years_needed_to_add
DTSTART_thisyear <- as.POSIXct(DTSTART_thisyear)
teddies_calendar$DTSTART <- DTSTART_thisyear
teddies_read <- readLines("~/Scheduled/dashboard/teddies_calendar.ics")
teddies_calendar <- ical(teddies_read)
DTSTART_thisyear <- as.POSIXlt(teddies_calendar$DTSTART)
DTSTART_thisyear$year <- DTSTART_thisyear$year+years_needed_to_add
DTSTART_thisyear <- as.POSIXct(DTSTART_thisyear)
teddies_calendar$DTSTART <- DTSTART_thisyear
DTEND_thisyear <- as.POSIXlt(teddies_calendar$DTEND)
DTEND_thisyear$year <- DTEND_thisyear$year+years_needed_to_add
DTEND_thisyear <- as.POSIXct(DTEND_thisyear)
teddies_calendar$DTEND <- DTEND_thisyear
teddies_calendar_thisweek <- teddies_calendar[
which(teddies_calendar$DTSTART >= today & teddies_calendar$DTSTART <= seven_days)
]
teddies_calendar_thisweek <- teddies_calendar[
which(teddies_calendar$DTSTART >= today & teddies_calendar$DTSTART <= seven_days),]
View(teddies_calendar_thisweek)
past_three_days <- today-(60*60*24*3)
teddies_calendar_thisweek <- teddies_calendar[
which(teddies_calendar$DTSTART >= past_three_days & teddies_calendar$DTSTART <= seven_days),]
teddies_calendar_thisweek$DTSTART
teddies_calendar_thisweek$SUMMARY
gsub("'s Birthday","",teddies_calendar_thisweek$SUMMARY)
as.Date(teddies_calendar_thisweek$DTSTART)
format(teddies_calendar_thisweek$DTSTART, "%d")
format(teddies_calendar_thisweek$DTSTART, "%d %b")
format(teddies_calendar_thisweek$DTSTART, "A %d %b")
format(teddies_calendar_thisweek$DTSTART, "%A %d %b")
format(teddies_calendar_thisweek$DTSTART, "%a %d %b")
paste0(format(teddies_calendar_thisweek$DTSTART, "%a %d %b"),
": ",
gsub("'s Birthday","",teddies_calendar_thisweek$SUMMARY),
"; ")
paste(format(teddies_calendar_thisweek$DTSTART, "%a %d %b"),
": ",
gsub("'s Birthday","",teddies_calendar_thisweek$SUMMARY),
"; ")
paste(format(teddies_calendar_thisweek$DTSTART, "%a %d %b"),
": ",
gsub("'s Birthday","",teddies_calendar_thisweek$SUMMARY),
"; ",
collapse="")
paste(format(teddies_calendar_thisweek$DTSTART, "%a %d %b"),
":",
gsub("'s Birthday","",teddies_calendar_thisweek$SUMMARY),
";",
collapse="")
paste(format(teddies_calendar_thisweek$DTSTART, "%a %d %b"),
":",
gsub("'s Birthday","",teddies_calendar_thisweek$SUMMARY),
";  ",
collapse="")
birthday_string <- paste(format(teddies_calendar_thisweek$DTSTART, "%a %d %b"),
":",
gsub("'s Birthday","",teddies_calendar_thisweek$SUMMARY),
";  ",
collapse="")
past_three_days
birthday_string_dashboard <- paste0("Birthdays this week: ",
birthday_string,
"(from ",
format(past_three_days, "%a %d %b"),
" to ",
format(next_seven_days, "%a %d %b"))
birthday_string_dashboard <- paste0("Birthdays this week: ",
birthday_string,
"(from ",
format(past_three_days, "%a %d %b"),
" to ",
format(seven_days, "%a %d %b"))
birthday_string_dashboard
birthday_string_dashboard <- paste0("Birthdays this week: ",
birthday_string,
"(from ",
format(past_three_days, "%a %d %b"),
" to ",
format(seven_days, "%a %d %b"),
")")
birthday_string_dashboard
birthday_string_dashboard <- paste0("Birthdays (from ",
format(past_three_days, "%a %d %b"),
" to ",
format(seven_days, "%a %d %b"),
"): ",
birthday_string)
birthday_string_dashboard <- paste0("Birthdays (from ",
format(past_three_days, "%a %d %b"),
" to ",
format(seven_days, "%a %d %b"),
"): ",
birthday_string)
birthday_string_dashboard
system("curl https://cloud.woelkli.com/remote.php/dav/public-calendars/ibz7z2ajXb7srQQc/?export > ~/Scheduled/dashboard/teddies_calendar.ics")
library(calendar)
today <- as.POSIXct(Sys.time())
seven_days <- today+(60*60*24*7)
past_three_days <- today-(60*60*24*3)
this_year <- as.numeric(substr(as.character(as.POSIXct(Sys.time())),1,4))
years_needed_to_add <- this_year-2023
teddies_read <- readLines("~/Scheduled/dashboard/teddies_calendar.ics")
teddies_calendar <- ical(teddies_read)
DTSTART_thisyear <- as.POSIXlt(teddies_calendar$DTSTART)
DTSTART_thisyear$year <- DTSTART_thisyear$year+years_needed_to_add
DTSTART_thisyear <- as.POSIXct(DTSTART_thisyear)
teddies_calendar$DTSTART <- DTSTART_thisyear
DTEND_thisyear <- as.POSIXlt(teddies_calendar$DTEND)
DTEND_thisyear$year <- DTEND_thisyear$year+years_needed_to_add
DTEND_thisyear <- as.POSIXct(DTEND_thisyear)
teddies_calendar$DTEND <- DTEND_thisyear
teddies_calendar_thisweek <- teddies_calendar[
which(teddies_calendar$DTSTART >= past_three_days & teddies_calendar$DTSTART <= seven_days),]
birthday_string <- paste(format(teddies_calendar_thisweek$DTSTART, "%a %d %b"),
":",
gsub("'s Birthday","",teddies_calendar_thisweek$SUMMARY),
";  ",
collapse="")
birthday_string_dashboard <- paste0("Birthdays (from ",
format(past_three_days, "%a %d %b"),
" to ",
format(seven_days, "%a %d %b"),
"): ",
birthday_string)
writeLines(birthday_string_dashboard,
"~/Scheduled/dashboard/results/birthday_string_dashboard.txt")
birthday_string_dashboard <- paste0("Birthdays (from ",
format(past_three_days, "%a %d %b"),
" to ",
format(seven_days, "%a %d %b"),
"): ",
birthday_string,
"\n")
writeLines(birthday_string_dashboard,
"~/Scheduled/dashboard/results/birthday_string_dashboard.txt")
birthday_string_dashboard <- paste0("Birthdays (from ",
format(past_three_days, "%a %d %b"),
" to ",
format(seven_days, "%a %d %b"),
"):\n",
birthday_string,
"\n")
writeLines(birthday_string_dashboard,
"~/Scheduled/dashboard/results/birthday_string_dashboard.txt")
load("~/Documents/satellites/workspace.RData")
xgb_do_3_categorical
xgb_do_3_categorical$results$Kappa
max(xgb_do_3_categorical$results$Kappa)
max(svm_do_3_categorical$results$Kappa)
max(rf_do_3_categorical$results$Kappa)
max(ann_do_3_categorical$results$Kappa)
max(xgb_do_12_categorical$results$Kappa)
max(svm_do_12_categorical$results$Kappa)
max(rf_do_12_categorical$results$Kappa)
max(ann_do_12_categorical$results$Kappa)
max(xgb_do_3_continuous$results$Rsquared)
max(xgb_do_3_continuous$results$Rsquared,na.omit=T)
xgb_do_3_continuous$results$Rsquared
View(xgb_do_3_continuous$results)
View(svm_do_3_continuous$results)
View(ann_do_3_continuous$results)
View(xgb_do_12_continuous$results)
View(svm_do_12_continuous$results)
View(ann_do_12_continuous$results)
View(xgb_chl_3_continuous$results)
View(svm_chl_3_continuous$results)
View(ann_chl_3_continuous$results)
View(xgb_chl_12_continuous$results)
View(svm_chl_12_continuous$results)
View(ann_chl_12_continuous$results)
metrics_xgb_chl_3_categorical
metrics_xgb_chl_3_continuous
metrics_svm_chl_3_continuous
metrics_ann_chl_3_continuous
metrics_xgb_chl_12_continuous
metrics_svm_chl_12_continuous
metrics_ann_chl_12_continuous
metrics_xgb_do_3_continuous
metrics_svm_do_3_continuous
metrics_ann_do_3_continuous
metrics_xgb_do_12_continuous
metrics_svm_do_12_continuous
metrics_ann_do_12_continuous
df_xgb_chl_12_continuous
df_xgb_chl_3_continuous
xgb_chl_3_continuous$bestTune
xgb_chl_12_continuous$bestTune
xgb_do_3_continuous$bestTune
xgb_do_12_continuous$bestTune
xgb_grid
?rgee::ee_imagecollection_to_local
file.path(tmp, "drive_")
tempdir()
file.path(tempdir(), "drive_")
#Load libraries etc
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) #Set working directory
library(terra) #For spatial data analysis
library(tidyterra) #For graphing etc
library(measurements) #For converting units
library(stringr) #For converting units
library(caret) #for neural networks
library(gridExtra) #to help graphing
library(ggplot2) #For graphing
theme_set(theme_bw()) #Because I'm fashionable
# Load data
df_wide_c <- read.csv("intermediate/df_clean.csv")
# Crucially, restrict to days 1 and 3
#df_wide_c <- df_wide_c[which(df_wide_c$day %in% c(1,3,4,5)),]
# Restrict based on cell numbers
df_wide_c <- df_wide_c[which(df_wide_c$cells_count>5 & df_wide_c$cells_prop>0.5),]
# Calculate indices
# Calculate summary statistics
numcols <- sapply(df_wide_c,FUN=is.numeric)
df_summarystats <- as.data.frame(rbind(sapply(df_wide_c[,numcols],FUN=min),
colMeans(df_wide_c[,numcols]),
sapply(df_wide_c[,numcols],FUN=max)))
df_summarystats
# working from here
set.seed(312)
trainIndex <- createDataPartition(df_wide_c$chl, p = .7,
list = FALSE,
times = 1)
dfTrain_312 <- df_wide_c[trainIndex,]
dfTest_312 <- df_wide_c[-trainIndex,]
trc <- trainControl(method="repeatedcv",
number=10,
repeats=3)
names(dfTrain_312)
xgb_chl_312_continuous_test <- train(chl~NDMI+NDWI_b+NDCI_b+NDTI_b+MNDWI_b+NDVI_b+dark_day,
data=dfTrain_312,
method="xgbTree",
trControl = trc,
#tuneGrid=xgb_grid,
verbosity=0,
tree_method="hist",
ncores=5)
xgb_chl_312_continuous_test$results$Rsquared
df_312_test_chl <- data.frame(observation = dfTest_312$chl,
prediction = predict(xgb_chl_312_continuous_test,newdata=dfTest_312))
postResample(pred=df_312_test_chl$prediction,obs=df_312_test_chl$observation)
ggplot(aes(x=observation,y=prediction),data=df_312_test_chl) +
geom_point() +
geom_abline(intercept=0, slope=1)
xgb_do_312_continuous_test <- train(do~NDMI+NDWI_b+NDCI_b+NDTI_b+MNDWI_b+NDVI_b+dark_day,
data=dfTrain_312,
method="xgbTree",
trControl = trc,
#tuneGrid=xgb_grid,
verbosity=0,
tree_method="hist",
ncores=5)
xgb_do_312_continuous_test$results$Rsquared
df_312_test_do <- data.frame(observation = dfTest_312$do,
prediction = predict(xgb_do_312_continuous_test,newdata=dfTest_312))
postResample(pred=df_312_test_do$prediction,obs=df_312_test_do$observation)
ggplot(aes(x=observation,y=prediction),data=df_312_test_do) +
geom_point() +
geom_abline(intercept=0, slope=1)
set.seed(123)
trainIndex <- createDataPartition(df_wide_c$chl, p = .7,
list = FALSE,
times = 1)
dfTrain_312 <- df_wide_c[trainIndex,]
dfTest_312 <- df_wide_c[-trainIndex,]
xgb_do_312_continuous_test <- train(do~NDMI+NDWI_b+NDCI_b+NDTI_b+MNDWI_b+NDVI_b+dark_day,
data=dfTrain_312,
method="xgbTree",
trControl = trc,
#tuneGrid=xgb_grid,
verbosity=0,
tree_method="hist",
ncores=5)
xgb_do_312_continuous_test$results$Rsquared
df_312_test_do <- data.frame(observation = dfTest_312$do,
prediction = predict(xgb_do_312_continuous_test,newdata=dfTest_312))
postResample(pred=df_312_test_do$prediction,obs=df_312_test_do$observation)
ggplot(aes(x=observation,y=prediction),data=df_312_test_do) +
geom_point() +
geom_abline(intercept=0, slope=1)
xgb_chl_312_continuous_test <- train(chl~NDMI+NDWI_b+NDCI_b+NDTI_b+MNDWI_b+NDVI_b+dark_day,
data=dfTrain_312,
method="xgbTree",
trControl = trc,
#tuneGrid=xgb_grid,
verbosity=0,
tree_method="hist",
ncores=5)
xgb_chl_312_continuous_test$results$Rsquared
df_312_test_chl <- data.frame(observation = dfTest_312$chl,
prediction = predict(xgb_chl_312_continuous_test,newdata=dfTest_312))
postResample(pred=df_312_test_chl$prediction,obs=df_312_test_chl$observation)
ggplot(aes(x=observation,y=prediction),data=df_312_test_chl) +
geom_point() +
geom_abline(intercept=0, slope=1)
xgb_chl_312_continuous_test <- train(chl~NDMI+NDWI_b+NDCI_b+NDTI_b+MNDWI_b+NDVI_b,
data=dfTrain_312,
method="xgbTree",
trControl = trc,
#tuneGrid=xgb_grid,
verbosity=0,
tree_method="hist",
ncores=5)
xgb_chl_312_continuous_test$results$Rsquared
df_312_test_chl <- data.frame(observation = dfTest_312$chl,
prediction = predict(xgb_chl_312_continuous_test,newdata=dfTest_312))
postResample(pred=df_312_test_chl$prediction,obs=df_312_test_chl$observation)
ggplot(aes(x=observation,y=prediction),data=df_312_test_chl) +
geom_point() +
geom_abline(intercept=0, slope=1)
set.seed(12312)
trainIndex <- createDataPartition(df_wide_c$chl, p = .7,
list = FALSE,
times = 1)
dfTrain_312 <- df_wide_c[trainIndex,]
dfTest_312 <- df_wide_c[-trainIndex,]
xgb_chl_312_continuous_test <- train(chl~NDMI+NDWI_b+NDCI_b+NDTI_b+MNDWI_b+NDVI_b+dark_day,
data=dfTrain_312,
method="xgbTree",
trControl = trc,
#tuneGrid=xgb_grid,
verbosity=0,
tree_method="hist",
ncores=5)
xgb_chl_312_continuous_test$results$Rsquared
df_312_test_chl <- data.frame(observation = dfTest_312$chl,
prediction = predict(xgb_chl_312_continuous_test,newdata=dfTest_312))
postResample(pred=df_312_test_chl$prediction,obs=df_312_test_chl$observation)
ggplot(aes(x=observation,y=prediction),data=df_312_test_chl) +
geom_point() +
geom_abline(intercept=0, slope=1)
xgb_chl_312_continuous_test <- train(chl~NDMI+NDWI_b+NDCI_b+NDTI_b+MNDWI_b+NDVI_b,
data=dfTrain_312,
method="xgbTree",
trControl = trc,
#tuneGrid=xgb_grid,
verbosity=0,
tree_method="hist",
ncores=5)
xgb_chl_312_continuous_test$results$Rsquared
df_312_test_chl <- data.frame(observation = dfTest_312$chl,
prediction = predict(xgb_chl_312_continuous_test,newdata=dfTest_312))
postResample(pred=df_312_test_chl$prediction,obs=df_312_test_chl$observation)
ggplot(aes(x=observation,y=prediction),data=df_312_test_chl) +
geom_point() +
geom_abline(intercept=0, slope=1)
xgb_chl_312_continuous_test <- train(chl~NDMI+NDWI_b+NDCI_b+NDTI_b+MNDWI_b+NDVI_b+dark_day,
data=dfTrain_312,
method="svmRadial",
trControl = trc,
#tuneGrid=xgb_grid,
verbosity=0,
tree_method="hist",
ncores=5)
xgb_chl_312_continuous_test$results$Rsquared
df_312_test_chl <- data.frame(observation = dfTest_312$chl,
prediction = predict(xgb_chl_312_continuous_test,newdata=dfTest_312))
postResample(pred=df_312_test_chl$prediction,obs=df_312_test_chl$observation)
ggplot(aes(x=observation,y=prediction),data=df_312_test_chl) +
geom_point() +
geom_abline(intercept=0, slope=1)
xgb_do_312_continuous_test <- train(do~NDMI+NDWI_b+NDCI_b+NDTI_b+MNDWI_b+NDVI_b+dark_day,
data=dfTrain_312,
method="svmRadial",
trControl = trc,
#tuneGrid=xgb_grid,
verbosity=0,
tree_method="hist",
ncores=5)
xgb_do_312_continuous_test$results$Rsquared
df_312_test_do <- data.frame(observation = dfTest_312$do,
prediction = predict(xgb_do_312_continuous_test,newdata=dfTest_312))
postResample(pred=df_312_test_do$prediction,obs=df_312_test_do$observation)
ggplot(aes(x=observation,y=prediction),data=df_312_test_do) +
geom_point() +
geom_abline(intercept=0, slope=1)
xgb_do_312_continuous_test <- train(do~NDMI+NDWI_b+NDCI_b+NDTI_b+MNDWI_b+NDVI_b+dark_day,
data=dfTrain_312,
method="svmRadial",
trControl = trc,
tuneGrid=svm_grid,
verbosity=0,
tree_method="hist",
ncores=5)
#xgb_grid <- xgb_grid[1,] #For debugging
svm_grid <- expand.grid(C=c(0.25,0.5,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,32,64,100,150,200),
sigma=c(0.01,0.05,0.1,0.5,0.6,0.7,0.8,0.9,1,1.1,1.2,1.3,1.4,1.5,2,5))
xgb_do_312_continuous_test <- train(do~NDMI+NDWI_b+NDCI_b+NDTI_b+MNDWI_b+NDVI_b+dark_day,
data=dfTrain_312,
method="svmRadial",
trControl = trc,
tuneGrid=svm_grid,
verbosity=0,
tree_method="hist",
ncores=5)
xgb_do_312_continuous_test$results$Rsquared
df_312_test_do <- data.frame(observation = dfTest_312$do,
prediction = predict(xgb_do_312_continuous_test,newdata=dfTest_312))
postResample(pred=df_312_test_do$prediction,obs=df_312_test_do$observation)
ggplot(aes(x=observation,y=prediction),data=df_312_test_do) +
geom_point() +
geom_abline(intercept=0, slope=1)
