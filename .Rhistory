trControl = trc,
tuneGrid=xgb_grid[c(1:10),],
verbosity=0,
tree_method="hist",
ncores=5)
xgb_do_312_continuous_test
trc <- trainControl(method="repeatedcv",
number=10,
repeats=3,
summaryFunction=sf_rr)
sf_rr <- function(data,lev=NULL,model=NULL){
RMSE_ren <- sqrt(mean((data$pred - data$obs)^2))
RMSE_ren
}
trc <- trainControl(method="repeatedcv",
number=10,
repeats=3,
summaryFunction=sf_rr)
xgb_do_312_continuous_test <- train(do~B2+B3+B4+B5+B8+day,
data=dfTrain_312,
method="xgbTree",
trControl = trc,
tuneGrid=xgb_grid[c(1:10),],
verbosity=0,
tree_method="hist",
ncores=5,
metric="RMSE_ren")
xgb_do_312_continuous_test
sf_rr <- function(data,lev=NULL,model=NULL){
RMSE_ren <- sqrt(mean((data$pred - data$obs)^2,na.omit=T))
RMSE_ren
}
data
sf_rr <- function(data,lev=NULL,model=NULL){
RMSE_ren <- sqrt(mean((data$pred - data$obs)^2,na.omit=T))
RMSE_ren
}
trc <- trainControl(method="repeatedcv",
number=10,
repeats=3,
summaryFunction=sf_rr)
xgb_do_312_continuous_test <- train(do~B2+B3+B4+B5+B8+day,
data=dfTrain_312,
method="xgbTree",
trControl = trc,
tuneGrid=xgb_grid[c(1:10),],
verbosity=0,
tree_method="hist",
ncores=5,
metric="RMSE_ren")
postResample
sf_rr <- function(data,lev=NULL,model=NULL){
pred <- data$pred
obs <- data$obs
RMSE_ren <- sqrt(mean((pred - obs)^2))
return(RMSE_ren)
}
trc <- trainControl(method="repeatedcv",
number=10,
repeats=3,
summaryFunction=sf_rr)
xgb_do_312_continuous_test <- train(do~B2+B3+B4+B5+B8+day,
data=dfTrain_312,
method="xgbTree",
trControl = trc,
tuneGrid=xgb_grid[c(1:10),],
verbosity=0,
tree_method="hist",
ncores=5,
metric="RMSE_ren")
sf_rr <- function(data,lev=NULL,model=NULL){
pred <- data$pred
obs <- data$obs
RMSE_ren <- sqrt(mean((pred - obs)^2))
names(RMSE_ren) <- "rr"
RMSE_ren
}
trc <- trainControl(method="repeatedcv",
number=10,
repeats=3,
summaryFunction=sf_rr)
xgb_do_312_continuous_test <- train(do~B2+B3+B4+B5+B8+day,
data=dfTrain_312,
method="xgbTree",
trControl = trc,
tuneGrid=xgb_grid[c(1:10),],
verbosity=0,
tree_method="hist",
ncores=5,
metric="rr")
xgb_do_312_continuous_test
xgb_do_312_continuous_test <- train(do~B2+B3+B4+B5+B8+day,
data=dfTrain_312,
method="xgbTree",
trControl = trc,
tuneGrid=xgb_grid[c(1:10),],
verbosity=0,
tree_method="hist",
ncores=5,
metric="rr",
maximize=F)
xgb_do_312_continuous_test
postResample
sf_rr <- function(data,lev=NULL,model=NULL){
pred <- data$pred
obs <- data$obs
RMSE_ren <- sqrt(mean((pred - obs)^2))
R2_ren <- cor(pred,obs,use="pairwise.complete.obs")^2
one_minus_R2_ren <- 1-R2_ren
combined_metric <- RMSE_ren*one_minus_R2_ren
names(RMSE_ren) <- "rr"
RMSE_ren
}
trc <- trainControl(method="repeatedcv",
number=10,
repeats=3,
summaryFunction=sf_rr)
xgb_do_312_continuous_test <- train(do~B2+B3+B4+B5+B8+day,
data=dfTrain_312,
method="xgbTree",
trControl = trc,
tuneGrid=xgb_grid[c(1:10),],
verbosity=0,
tree_method="hist",
ncores=5,
metric="rr",
maximize=F)
xgb_do_312_continuous_test
View(xgb_do_312_continuous_test$results)
xgb_do_312_continuous_test$results$Rsquared
df_312_test_do <- data.frame(observation = dfTest_312$do,
prediction = predict(xgb_do_312_continuous_test,newdata=dfTest_312))
postResample(pred=df_312_test_do$prediction,obs=df_312_test_do$observation)
ggplot(aes(x=observation,y=prediction),data=df_312_test_do) +
geom_point() +
geom_abline(slope=1,intercept=0) +
xlim(2,8) +
ylim(2,8)
xgb_do_312_continuous_test <- train(do~B2+B3+B4+B5+B8+day,
data=dfTrain_312,
method="xgbTree",
trControl = trc,
tuneGrid=xgb_grid,
verbosity=0,
tree_method="hist",
ncores=5,
metric="rr",
maximize=F)
xgb_do_312_continuous_test
View(xgb_do_312_continuous_test$results)
xgb_do_312_continuous_test$results$Rsquared
df_312_test_do <- data.frame(observation = dfTest_312$do,
prediction = predict(xgb_do_312_continuous_test,newdata=dfTest_312))
postResample(pred=df_312_test_do$prediction,obs=df_312_test_do$observation)
ggplot(aes(x=observation,y=prediction),data=df_312_test_do) +
geom_point() +
geom_abline(slope=1,intercept=0) +
xlim(2,8) +
ylim(2,8)
xgb_grid2 <- xgb_grid[which(xgb_grid$max_depth==14),]
nrow(xgb_grid2)
xgb_do_312_continuous_test <- train(do~B2+B3+B4+B5+B8+day,
data=dfTrain_312,
method="xgbTree",
trControl = trc,
tuneGrid=xgb_grid2,
verbosity=0,
tree_method="hist",
ncores=5,
metric="rr",
maximize=F)
xgb_do_312_continuous_test
View(xgb_do_312_continuous_test$results)
xgb_do_312_continuous_test$results$Rsquared
df_312_test_do <- data.frame(observation = dfTest_312$do,
prediction = predict(xgb_do_312_continuous_test,newdata=dfTest_312))
postResample(pred=df_312_test_do$prediction,obs=df_312_test_do$observation)
ggplot(aes(x=observation,y=prediction),data=df_312_test_do) +
geom_point() +
geom_abline(slope=1,intercept=0) +
xlim(2,8) +
ylim(2,8)
xgb_grid2 <- xgb_grid[which(xgb_grid$max_depth==14 & xgb_grid$min_child_weight==1),]
xgb_do_312_continuous_test <- train(do~B2+B3+B4+B5+B8+day,
data=dfTrain_312,
method="xgbTree",
trControl = trc,
tuneGrid=xgb_grid2,
verbosity=0,
tree_method="hist",
ncores=5,
metric="rr",
maximize=F)
df_312_test_do <- data.frame(observation = dfTest_312$do,
prediction = predict(xgb_do_312_continuous_test,newdata=dfTest_312))
postResample(pred=df_312_test_do$prediction,obs=df_312_test_do$observation)
ggplot(aes(x=observation,y=prediction),data=df_312_test_do) +
geom_point() +
geom_abline(slope=1,intercept=0) +
xlim(2,8) +
ylim(2,8)
xgb_grid2 <- xgb_grid[which(xgb_grid$max_depth==2 & xgb_grid$min_child_weight==1),]
xgb_do_312_continuous_test <- train(do~B2+B3+B4+B5+B8+day,
data=dfTrain_312,
method="xgbTree",
trControl = trc,
tuneGrid=xgb_grid2,
verbosity=0,
tree_method="hist",
ncores=5,
metric="rr",
maximize=F)
df_312_test_do <- data.frame(observation = dfTest_312$do,
prediction = predict(xgb_do_312_continuous_test,newdata=dfTest_312))
postResample(pred=df_312_test_do$prediction,obs=df_312_test_do$observation)
ggplot(aes(x=observation,y=prediction),data=df_312_test_do) +
geom_point() +
geom_abline(slope=1,intercept=0) +
xlim(2,8) +
ylim(2,8)
#Load libraries etc
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) #Set working directory
library(terra) #For spatial data analysis
library(tidyterra) #For graphing etc
library(measurements) #For converting units
library(stringr) #For converting units
library(caret) #for neural networks
library(gridExtra) #to help graphing
library(ggplot2) #For graphing
theme_set(theme_bw()) #Because I'm fashionable
# Load data
df_wide_c <- read.csv("intermediate/df_wide_c.csv")
# Crucially, restrict to days 1 and 3
df_wide_c <- df_wide_c[which(df_wide_c$day %in% c(1,3,4,5)),]
# Calculate indices
df_wide_c$NDWI <- (df_wide_c$B3-df_wide_c$B8)/(df_wide_c$B3+df_wide_c$B8)
df_wide_c$NDCI <- (df_wide_c$B5-df_wide_c$B4)/(df_wide_c$B5+df_wide_c$B4)
df_wide_c$NDTI <- (df_wide_c$B4-df_wide_c$B3)/(df_wide_c$B4+df_wide_c$B3)
df_wide_c$NDMI <- (df_wide_c$B8-df_wide_c$B11)/(df_wide_c$B8+df_wide_c$B11)
df_wide_c$MNDWI <- (df_wide_c$B3-df_wide_c$B11)/(df_wide_c$B3+df_wide_c$B11)
df_wide_c$NDVI <- (df_wide_c$B8-df_wide_c$B4)/(df_wide_c$B8+df_wide_c$B4)
df_summarystats <- as.data.frame(rbind(sapply(df_wide_c[,c(6:29)],FUN=min),
colMeans(df_wide_c[,c(6:29)]),
sapply(df_wide_c[,c(6:29)],FUN=max)))
df_summarystats
# Load data
df_wide_c <- read.csv("intermediate/df_wide_c.csv")
# Crucially, restrict to days 1 and 3
df_wide_c <- df_wide_c[which(df_wide_c$day %in% c(1,3,4,5)),]
# Calculate indices
df_wide_c$NDWI <- (df_wide_c$B3-df_wide_c$B8)/(df_wide_c$B3+df_wide_c$B8)
df_wide_c$NDCI <- (df_wide_c$B5-df_wide_c$B4)/(df_wide_c$B5+df_wide_c$B4)
df_wide_c$NDTI <- (df_wide_c$B4-df_wide_c$B3)/(df_wide_c$B4+df_wide_c$B3)
df_wide_c$NDMI <- (df_wide_c$B8-df_wide_c$B11)/(df_wide_c$B8+df_wide_c$B11)
df_wide_c$MNDWI <- (df_wide_c$B3-df_wide_c$B11)/(df_wide_c$B3+df_wide_c$B11)
df_wide_c$NDVI <- (df_wide_c$B8-df_wide_c$B4)/(df_wide_c$B8+df_wide_c$B4)
df_summarystats <- as.data.frame(rbind(sapply(df_wide_c[,c(6:29)],FUN=min),
colMeans(df_wide_c[,c(6:29)]),
sapply(df_wide_c[,c(6:29)],FUN=max)))
View(df_wide_c)
sapply(df_wide_c,FUN=is.numeric)
numcols <- sapply(df_wide_c,FUN=is.numeric)
df_summarystats <- as.data.frame(rbind(sapply(df_wide_c[,numcols],FUN=min),
colMeans(df_wide_c[,numcols]),
sapply(df_wide_c[,numcols],FUN=max)))
df_summarystats
set.seed(312)
trainIndex <- createDataPartition(df_wide_c$chlorophyll, p = .7,
list = FALSE,
times = 1)
dfTrain_312 <- df_wide_c[trainIndex,]
dfTest_312 <- df_wide_c[-trainIndex,]
set.seed(312)
trainIndex <- createDataPartition(df_wide_c$do, p = .7,
list = FALSE,
times = 1)
dfTrain_312 <- df_wide_c[trainIndex,]
dfTest_312 <- df_wide_c[-trainIndex,]
trc <- trainControl(method="repeatedcv",
number=10,
repeats=3,
summaryFunction=sf_rr)
xgb_grid2 <- xgb_grid[which(xgb_grid$max_depth==2 & xgb_grid$min_child_weight==1),]
xgb_do_312_continuous_test <- train(do~B2+B3+B4+B5+B8+day,
data=dfTrain_312,
method="xgbTree",
trControl = trc,
tuneGrid=xgb_grid2,
verbosity=0,
tree_method="hist",
ncores=5,
metric="rr",
maximize=F)
xgb_do_312_continuous_test
df_312_test_do <- data.frame(observation = dfTest_312$do,
prediction = predict(xgb_do_312_continuous_test,newdata=dfTest_312))
postResample(pred=df_312_test_do$prediction,obs=df_312_test_do$observation)
ggplot(aes(x=observation,y=prediction),data=df_312_test_do) +
geom_point() +
geom_abline(slope=1,intercept=0) +
xlim(2,8) +
ylim(2,8)
xgb_do_312_continuous_test <- train(do~B2+B3+B4+B5+B8+day,
data=dfTrain_312,
method="xgbTree",
trControl = trc,
#tuneGrid=xgb_grid2,
verbosity=0,
tree_method="hist",
ncores=5,
metric="rr",
maximize=F)
xgb_do_312_continuous_test
View(xgb_do_312_continuous_test$results)
#View(xgb_do_312_continuous_test$results)
xgb_do_312_continuous_test$results$Rsquared
df_312_test_do <- data.frame(observation = dfTest_312$do,
prediction = predict(xgb_do_312_continuous_test,newdata=dfTest_312))
postResample(pred=df_312_test_do$prediction,obs=df_312_test_do$observation)
ggplot(aes(x=observation,y=prediction),data=df_312_test_do) +
geom_point() +
geom_abline(slope=1,intercept=0) +
xlim(2,8) +
ylim(2,8)
trc <- trainControl(method="repeatedcv",
number=10,
repeats=3)#,
#summaryFunction=sf_rr)
xgb_grid2 <- xgb_grid[which(xgb_grid$max_depth==2 & xgb_grid$min_child_weight==1),]
xgb_do_312_continuous_test <- train(do~B2+B3+B4+B5+B8+day,
data=dfTrain_312,
method="xgbTree",
trControl = trc,
#tuneGrid=xgb_grid2,
verbosity=0,
tree_method="hist",
ncores=5,
#metric="rr",
maximize=F)
xgb_do_312_continuous_test
#View(xgb_do_312_continuous_test$results)
xgb_do_312_continuous_test$results$Rsquared
df_312_test_do <- data.frame(observation = dfTest_312$do,
prediction = predict(xgb_do_312_continuous_test,newdata=dfTest_312))
postResample(pred=df_312_test_do$prediction,obs=df_312_test_do$observation)
ggplot(aes(x=observation,y=prediction),data=df_312_test_do) +
geom_point() +
geom_abline(slope=1,intercept=0) +
xlim(2,8) +
ylim(2,8)
View(xgb_do_312_continuous_test$results)
xgb_do_312_continuous_test <- train(do~B2+B3+B4+B5+B8+day,
data=dfTrain_312,
method="xgbTree",
trControl = trc,
tuneGrid=xgb_grid,
verbosity=0,
tree_method="hist",
ncores=5,
#metric="rr",
maximize=F)
xgb_do_312_continuous_test
View(xgb_do_312_continuous_test$results)
#View(xgb_do_312_continuous_test$results)
xgb_do_312_continuous_test$results$Rsquared
df_312_test_do <- data.frame(observation = dfTest_312$do,
prediction = predict(xgb_do_312_continuous_test,newdata=dfTest_312))
postResample(pred=df_312_test_do$prediction,obs=df_312_test_do$observation)
ggplot(aes(x=observation,y=prediction),data=df_312_test_do) +
geom_point() +
geom_abline(slope=1,intercept=0) +
xlim(2,8) +
ylim(2,8)
xgb_do_312_continuous_test <- train(do~B2+B3+B4+B5+B8+day,
data=dfTrain_312,
method="xgbTree",
trControl = trc,
tuneGrid=xgb_grid,
verbosity=0,
tree_method="hist",
ncores=5#,
#metric="rr",
#maximize=F
)
xgb_do_312_continuous_test
#View(xgb_do_312_continuous_test$results)
xgb_do_312_continuous_test$results$Rsquared
df_312_test_do <- data.frame(observation = dfTest_312$do,
prediction = predict(xgb_do_312_continuous_test,newdata=dfTest_312))
postResample(pred=df_312_test_do$prediction,obs=df_312_test_do$observation)
ggplot(aes(x=observation,y=prediction),data=df_312_test_do) +
geom_point() +
geom_abline(slope=1,intercept=0) +
xlim(2,8) +
ylim(2,8)
# Load data
df_wide_c <- read.csv("intermediate/df_clean.csv")
# Restrict based on cell numbers
df_wide_c <- df_wide_c[which(df_wide_c$cell_count>5 &
df_wide_c$cell_prop>0.5),]
# Calculate indices
df_wide_c$NDWI <- (df_wide_c$B3-df_wide_c$B8)/(df_wide_c$B3+df_wide_c$B8)
df_wide_c$NDCI <- (df_wide_c$B5-df_wide_c$B4)/(df_wide_c$B5+df_wide_c$B4)
df_wide_c$NDTI <- (df_wide_c$B4-df_wide_c$B3)/(df_wide_c$B4+df_wide_c$B3)
df_wide_c$NDMI <- (df_wide_c$B8-df_wide_c$B11)/(df_wide_c$B8+df_wide_c$B11)
df_wide_c$MNDWI <- (df_wide_c$B3-df_wide_c$B11)/(df_wide_c$B3+df_wide_c$B11)
df_wide_c$NDVI <- (df_wide_c$B8-df_wide_c$B4)/(df_wide_c$B8+df_wide_c$B4)
numcols <- sapply(df_wide_c,FUN=is.numeric)
df_summarystats <- as.data.frame(rbind(sapply(df_wide_c[,numcols],FUN=min),
colMeans(df_wide_c[,numcols]),
sapply(df_wide_c[,numcols],FUN=max)))
df_summarystats
View(df_wide_c)
# Load data
df_wide_c <- read.csv("intermediate/df_clean.csv")
# Restrict based on cell numbers
df_wide_c <- df_wide_c[which(df_wide_c$cells_count>5 &
df_wide_c$cells_prop>0.5),]
# Calculate indices
df_wide_c$NDWI <- (df_wide_c$B3-df_wide_c$B8)/(df_wide_c$B3+df_wide_c$B8)
df_wide_c$NDCI <- (df_wide_c$B5-df_wide_c$B4)/(df_wide_c$B5+df_wide_c$B4)
df_wide_c$NDTI <- (df_wide_c$B4-df_wide_c$B3)/(df_wide_c$B4+df_wide_c$B3)
df_wide_c$NDMI <- (df_wide_c$B8-df_wide_c$B11)/(df_wide_c$B8+df_wide_c$B11)
df_wide_c$MNDWI <- (df_wide_c$B3-df_wide_c$B11)/(df_wide_c$B3+df_wide_c$B11)
df_wide_c$NDVI <- (df_wide_c$B8-df_wide_c$B4)/(df_wide_c$B8+df_wide_c$B4)
numcols <- sapply(df_wide_c,FUN=is.numeric)
df_summarystats <- as.data.frame(rbind(sapply(df_wide_c[,numcols],FUN=min),
colMeans(df_wide_c[,numcols]),
sapply(df_wide_c[,numcols],FUN=max)))
df_summarystats
# Do some initial chlorophyll analysis
#df_clean_13 <- df_clean[which(df_clean$day %in% c(1,3)),]
lm_chl <- lm(chl~NDCI,data=df_wide_c)
summary(lm_chl)
g_scatterplot_ndci <- ggplot(aes(x=chl,y=NDCI),data=df_wide_c) +
geom_point() +
geom_smooth(method="lm",se=F)
g_scatterplot_ndci
# Do some initial chlorophyll analysis
df_wide_c_13 <- df_wide_c[which(df_wide_c$day %in% c(1,3)),]
lm_chl <- lm(chl~NDCI,data=df_wide_c_13)
summary(lm_chl)
g_scatterplot_ndci <- ggplot(aes(x=chl,y=NDCI),data=df_wide_c_13) +
geom_point() +
geom_smooth(method="lm",se=F)
g_scatterplot_ndci
ggsave("preliminary_analysis/g_scatterplot_ndci.png",g_scatterplot_ndci,width=6,height=3)
trainIndex <- createDataPartition(df_wide_c$chl, p = .7,
list = FALSE,
times = 1)
dfTrain_312 <- df_wide_c[trainIndex,]
dfTest_312 <- df_wide_c[-trainIndex,]
xgb_chl_312_continuous_test <- train(chl~NDCI,
data=dfTrain_312,
method="xgbTree",
trControl = trc,
#tuneGrid=xgb_grid,
verbosity=0,
tree_method="hist",
ncores=5)
xgb_chl_312_continuous_test
xgb_chl_312_continuous_test$results$Rsquared
df_312_test_chl <- data.frame(observation = dfTest_312$chlorophyll,
prediction = predict(xgb_chl_312_continuous_test,newdata=dfTest_312))
postResample(pred=df_312_test_chl$prediction,obs=df_312_test_chl$observation)
ggplot(aes(x=observation,y=prediction),data=df_312_test_chl) +
geom_point() +
geom_abline(intercept=0, slope=1)
xgb_chl_312_continuous_test <- train(chl~NDCI+B2+B3+B4+B5+B6+B8A+day,
data=dfTrain_312,
method="xgbTree",
trControl = trc,
#tuneGrid=xgb_grid,
verbosity=0,
tree_method="hist",
ncores=5)
xgb_chl_312_continuous_test
xgb_chl_312_continuous_test$results$Rsquared
df_312_test_chl <- data.frame(observation = dfTest_312$chlorophyll,
prediction = predict(xgb_chl_312_continuous_test,newdata=dfTest_312))
postResample(pred=df_312_test_chl$prediction,obs=df_312_test_chl$observation)
ggplot(aes(x=observation,y=prediction),data=df_312_test_chl) +
geom_point() +
geom_abline(intercept=0, slope=1)
xgb_chl_312_continuous_test
xgb_chl_312_continuous_test$results$Rsquared
df_312_test_chl <- data.frame(observation = dfTest_312$chl,
prediction = predict(xgb_chl_312_continuous_test,newdata=dfTest_312))
postResample(pred=df_312_test_chl$prediction,obs=df_312_test_chl$observation)
ggplot(aes(x=observation,y=prediction),data=df_312_test_chl) +
geom_point() +
geom_abline(intercept=0, slope=1)
lm_chl <- lm(chl~NDCI+day,data=df_wide_c_13)
summary(lm_chl)
g_scatterplot_ndci <- ggplot(aes(x=chl,y=NDCI,colour=as.factor(day),size=cells_count),data=df_wide_c_13) +
geom_point() +
geom_smooth(method="lm",se=F)
g_scatterplot_ndci
?lm
lm_chl <- lm(chl~NDCI+day,data=df_wide_c_13,
weights=cells_count)
summary(lm_chl)
lm_chl <- lm(chl~NDCI+day,data=df_wide_c_13)
summary(lm_chl)
g_scatterplot_ndci <- ggplot(aes(x=chl,y=NDCI,colour=as.factor(day),size=cells_count),data=df_wide_c_13) +
geom_point() +
geom_smooth(method="lm",se=F)
g_scatterplot_ndci
g_scatterplot_ndci <- ggplot(aes(x=chl,y=NDCI,colour=as.factor(day)),data=df_wide_c_13) +
geom_point() +
geom_smooth(method="lm",se=F)
g_scatterplot_ndci
